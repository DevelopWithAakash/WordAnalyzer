{"version":3,"sources":["components/Navbarws.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbarws","props","React","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","split","map","word","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","trim","match","length","replace","defaultProps","aboutText","App","mode","setMode","toggleMode","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4aa21fd8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n// import { Router } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Navbarws(props) {\r\n    return (\r\n        \r\n        <nav className={'navbar navbar-expand-lg navbar-{props.mode} bg-{props.mode}'}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\"> */}\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                            {/* <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    {/* <div className={\"form-check form-switch text-${props.mode ==='light'?'dark':'light'} \"}>\r\n                        <input className=\"form-check-input mx-1\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\"></label>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        \r\n    )\r\n}\r\nNavbarws.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbarws.defaultProps = {\r\n    title: 'Set title',\r\n    aboutText: 'About us'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        // console.log(\"Lowercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    // capitalization for every word first character is capital\r\n    const handleCapClick = () => {\r\n        // console.log(\"Capitalization was clicked: \" + text);\r\n        // let text = newText;\r\n        let words = text.toLowerCase().split(' ');\r\n        let CapText = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\r\n        let newText = CapText.join(' ');\r\n        setText(newText)\r\n    }\r\n\r\n    // COPPY ALL TEXT FROM BOX\r\n    const handleCopyClick = () => {\r\n        // console.log(\"Copy was clicked: \" + text);\r\n        var text =document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    // Remove Extra Spaces\r\n    const handleRmExSpClick = () => {\r\n        // console.log(\"Remove Extra Spaces was clicked: \" + text);\r\n        let Text = text.split(/[ ]+/);\r\n        let newText = Text.join(' ');\r\n        setText(newText)\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        // console.log(\"ClearText was clicked: \" + text);\r\n        let newText = ('');\r\n        setText(newText)\r\n    }\r\n\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"9\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary my-1 mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-success my-1 mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-info my-1 mx-1\" onClick={handleCapClick}>Convert to Capitalization</button>\r\n                <button className=\"btn btn-secondary my-1 mx-1\" onClick={handleRmExSpClick}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-warning my-1 mx-1\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button className=\"btn btn-danger my-1 mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h2>Your Text Summary</h2>\r\n                {/* <p>{text.split(\" \").length} Words and {text.replace(/\\s/g, '').length} Characters</p> */}\r\n                <p>{text.trim() === '' ? 0 : text.match(/\\S+/g).length} words and {text.replace(/\\s/g, '').length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\n// import Navbar from './components/Navbar';\nimport Navbarws from './components/Navbarws';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mood is enable or not\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n\n    }\n    else {\n      setMode('light');\n    }\n  }\n\n  return (\n    <>\n\n      {/* <Navbar title=\"MTD\" aboutText=\"About\" /> */}\n      {/* <Navbar title=\"MTD\" mode={mode} toggleMode={toggleMode} /> */}\n      {/* <Router> */}\n      <Navbarws title=\"MTD\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter your text below to analyze\" />\n\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm heading=\"Enter your text below to analyze\" />\n            </Route>\n          </Switch>\n        </Router> */}\n        </div>\n\n\n\n\n      </>\n      );\n}\n\n      export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}